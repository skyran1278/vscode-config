{
  // ****************************************************************************************************
  // VSCode
  // ****************************************************************************************************

  // debug
  "debug.toolBarLocation": "commandCenter",

  // bracket color
  "editor.bracketPairColorization.enabled": true,

  // save
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit", // auto remove unused imports
    "source.sortMembers": "explicit"
  },
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,

  // editor
  "editor.cursorWidth": 3,
  "editor.inlineSuggest.enabled": true,
  "editor.mouseWheelZoom": true,
  "editor.renderWhitespace": "boundary",
  // "editor.tabSize": 2,
  // "editor.guides.bracketPairs": true,
  // "editor.suggestSelection": "first",
  // "editor.suggest.snippetsPreventQuickSuggestions": false,

  // explorer
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,

  // files
  "files.associations": {
    ".clang-format": "yaml",
    "*.cls": "vb",
    ".env.dev": "properties",
    ".env.example": "properties"
  },

  // git
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  // "git.closeDiffOnOperation": true,
  "git.inputValidation": true, // validate commit message
  "git.inputValidationSubjectLength": 100,
  "git.inputValidationLength": 100,

  // telemetry vscode send data to microsoft
  "telemetry.telemetryLevel": "off",

  // terminal
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.fontFamily": "MesloLGS NF",
  // save terminal layout after exit
  "terminal.integrated.persistentSessionReviveProcess": "onExitAndWindowClose",
  "terminal.integrated.experimentalInlineChat": true,

  // workbench
  "workbench.startupEditor": "none",

  // TS JS
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  // "javascript.inlayHints.parameterNames.enabled": "literals",
  // "typescript.suggest.paths": false,

  // ****************************************************************************************************
  // Extensions
  // ****************************************************************************************************

  // AWS Toolkit
  "aws.telemetry": false,

  // Code Spell Checker
  "cSpell.userWords": [
    "autofetch",
    "Backquote",
    "commitlint",
    "datetime",
    "esbenp",
    "Intelli",
    "Meslo",
    "typeorm",
    "uuidv",
    "vsintellicode"
  ],

  // GitHub Copilot
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "typescript": true
  },

  // GitLens â€” Git supercharged
  "gitlens.advanced.fileHistoryFollowsRenames": true,
  "gitlens.ai.experimental.openai.model": "gpt-4-1106-preview",
  "gitlens.ai.experimental.provider": "openai",
  "gitlens.experimental.generateCommitMessagePrompt": "Create a commit message adhering to '@commitlint/config-conventional' standards:\n- Format: type(scope?): subject\n- Ensure each line is under 80 characters.\n- Types: Choose from [build, chore, ci, docs, feat, fix, perf, refactor, revert, style, test, merge, config].\n- Scope: Use the relevant folder name.\n- Body Guidelines:\n  - Be concise, clear, and understandable.\n  - Write in the imperative, present tense.\n  - Start with a lowercase letter.\n  - Avoid ending sentences with a period.\n  - Separate points with a dash (-) where feasible.\n- Example: \n  - fix(authentication): improve password strength validation\n- Avoid enclosing the message in triple backticks.",

  // Material Icon Theme
  "workbench.iconTheme": "material-icon-theme",
  "material-icon-theme.activeIconPack": "nest",
  "material-icon-theme.files.associations": {
    // typeorm
    "*.entity.ts": "nest-controller",
    // queue
    "*.processor.ts": "nest-filter",
    "*.queue-events.ts": "nest-filter",
    // graphql
    "*.args.ts": "nest-guard",
    "*.input.ts": "nest-guard",
    "*.output.ts": "nest-guard",
    "*.type.ts": "nest-guard",
    "*.loader.ts": "nest-guard",
    // type
    "*.enum.ts": "nest-middleware",
    "*.interface.ts": "nest-middleware",
    "*.interceptor.ts": "nest-middleware",
    // logic
    "*.provider.ts": "nest-service"
  },
  "material-icon-theme.folders.theme": "classic",

  // One Dark Pro
  "workbench.colorTheme": "One Dark Pro",

  // Prettier - Code formatter
  "[css][html][json][jsonc][javascript][javascriptreact][markdown][typescript][typescriptreact][yaml][sql]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // IntelliCode
  // "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  // YAML
  "redhat.telemetry.enabled": false,

  // Todo Tree
  "todo-tree.highlights.useColourScheme": true
}
